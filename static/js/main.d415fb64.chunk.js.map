{"version":3,"sources":["components/WeatherAPI.jsx","components/weather.jsx","App.js","index.js"],"names":["WeatherApi","getWeatherApiCall","city","axios","get","then","responce","Weather","props","handleKeyDown","e","key","getWeather","state","data","name","sys","country","weather","main","description","icon","temp_min","feels_like","pressure","temp","temp_max","wind","deg","gust","speed","this","response","setState","target","value","className","type","onKeyDown","onChange","onCityChange","onClick","onSubmit","aria-label","src","alt","toFixed","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPASeA,EANI,CACfC,kBADe,SACGC,GACd,OAAOC,IAAMC,IAAN,2DAA8DF,EAA9D,4CAA6GG,MAAK,SAAAC,GAAQ,OAAIA,O,OC+F9HC,E,kDA/FX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA4CVC,cAAgB,SAACC,GACC,UAAVA,EAAEC,KACF,EAAKC,cA7CT,EAAKC,MAAQ,CACTC,KAAM,CACFC,KAAM,YACNC,IAAK,CACDC,QAAS,MAEbC,QAAS,CAAC,CACNC,KAAM,OACNC,YAAa,OACbC,KAAM,QAEVF,KAAM,CACFG,SAAU,IACVC,WAAY,IACZC,SAAU,IACVC,KAAM,IACNC,SAAU,KAEdC,KAAM,CACFC,IAAK,IACLC,KAAM,IACNC,MAAO,OAvBJ,E,8CA6BnB,WAAc,IAAD,OACT9B,EAAWC,kBAAkB8B,KAAKlB,MAAMC,KAAKC,MAAMV,MAAK,SAAA2B,GACpD,EAAKC,SAAS,CAACnB,KAAMkB,EAASlB,Y,+BAGtC,WACGiB,KAAKnB,e,0BAGR,SAAaD,EAAKD,GACd,IAAKI,EAAQiB,KAAKlB,MAAbC,KACLA,EAAKH,GAAMD,EAAEwB,OAAOC,MACpBJ,KAAKE,SAAS,CACVnB,KAAMA,M,sBASd,WACIiB,KAAKnB,e,oBAGT,WAAU,IAAD,OACAE,EAAQiB,KAAKlB,MAAbC,KACDO,EAAI,0CAAsCP,EAAKI,QAAQ,GAAGG,KAAtD,QAER,OAAQ,sBAAKe,UAAU,gBAAf,UACJ,gCACI,uBAAOC,KAAK,OAAOC,UAAWP,KAAKtB,cAAe0B,MAAOrB,EAAKC,KAAMwB,SAAU,SAAC7B,GAAD,OAAO,EAAK8B,aAAa,OAAQ9B,MAC/G,wBAAQ+B,QAAS,kBAAM,EAAKC,YAA5B,sBAEJ,8CAAiB5B,EAAKC,KAAtB,KAA8BD,EAAKE,IAAIC,QAAvC,OACA,sBAAKmB,UAAU,wBAAf,UACI,8BACI,qBAAIO,aAAW,kBAAf,UACI,6BAAI,4BAAI7B,EAAKI,QAAQ,GAAGC,SACxB,6BAAI,4BAAIL,EAAKI,QAAQ,GAAGE,gBACxB,6BAAI,qBAAKwB,IAAKvB,EAAMwB,IAAI,kBAGhC,8BACI,qBAAIF,aAAW,eAAf,UACI,6BAAI,4CAAiB7B,EAAKK,KAAL,SAAyB,QAAQ2B,UAAlD,UACJ,6BAAI,4CAAgBhC,EAAKK,KAAL,SAAyB,QAAQ2B,UAAjD,UACJ,6BAAI,wCAAYhC,EAAKK,KAAL,KAAqB,QAAQ2B,UAAzC,eAGZ,8BACI,qBAAIH,aAAW,QAAf,UACI,6BAAI,4CAAe7B,EAAKa,KAAKC,IAAzB,YACJ,6BAAI,uCAAUd,EAAKa,KAAKE,UACxB,6BAAI,wCAAWf,EAAKa,KAAKG,MAArB,4B,GArFNiB,IAAMC,WCQbC,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACC,cAAC,EAAD,OCFLc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d415fb64.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst WeatherApi = {\r\n    getWeatherApiCall(city) {\r\n        return axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=aa7fb2b5e250e35b9d337d517eeac7a0`).then(responce => responce);\r\n    }\r\n};\r\n\r\nexport default WeatherApi;","import React from 'react';\r\nimport WeatherApi from './WeatherAPI';\r\n\r\n\r\nclass Weather extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {\r\n                name: \"city name\",\r\n                sys: {\r\n                    country: 'UK'\r\n                },\r\n                weather: [{\r\n                    main: 'nice',\r\n                    description: 'nice',\r\n                    icon: '04d'\r\n                }],\r\n                main: {\r\n                    temp_min: '0',\r\n                    feels_like: '0',\r\n                    pressure: '0',\r\n                    temp: '0',\r\n                    temp_max: '0'\r\n                },\r\n                wind: {\r\n                    deg: '0',\r\n                    gust: '0',\r\n                    speed: '0'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    getWeather() {\r\n        WeatherApi.getWeatherApiCall(this.state.data.name).then(response => {\r\n            this.setState({data: response.data}) })\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.getWeather();\r\n    }\r\n\r\n    onCityChange(key, e) {\r\n        let {data} = this.state;\r\n        data[key]= e.target.value;\r\n        this.setState({\r\n            data: data\r\n        });\r\n    };\r\n    handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.getWeather();\r\n        }\r\n    };\r\n\r\n    onSubmit() {\r\n        this.getWeather();\r\n    };\r\n\r\n    render() {\r\n        let {data} = this.state;\r\n        let icon = `http://openweathermap.org/img/w/${data.weather[0].icon}.png`;\r\n\r\n        return (<div className=\"weather_block\">\r\n            <div>\r\n                <input type=\"text\" onKeyDown={this.handleKeyDown} value={data.name} onChange={(e) => this.onCityChange(\"name\", e)}/>\r\n                <button onClick={() => this.onSubmit()}>click</button>\r\n            </div>\r\n            <p>You are from {data.name}, {data.sys.country}.</p>\r\n            <div className=\"weather_display_block\">\r\n                <div>\r\n                    <ul aria-label=\"The weather is:\">\r\n                        <li><p>{data.weather[0].main}</p></li>\r\n                        <li><p>{data.weather[0].description}</p></li>\r\n                        <li><img src={icon} alt=\"clouds\"/></li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <ul aria-label=\"Temperature:\">\r\n                        <li><p>Temp min: { ((data.main[\"temp_min\"]) - 273.15).toFixed()}.C</p></li>\r\n                        <li><p>Temp max: {((data.main[\"temp_max\"]) - 273.15).toFixed()}.C</p></li>\r\n                        <li><p>Temp: {((data.main[\"temp\"]) - 273.15).toFixed()}.C</p></li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <ul aria-label=\"Wind:\">\r\n                        <li><p>Direction: {data.wind.deg}.deg</p></li>\r\n                        <li><p>Gust: {data.wind.gust}</p></li>\r\n                        <li><p>Speed: {data.wind.speed}.km/h</p></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>)\r\n    }\r\n\r\n};\r\n\r\nexport default Weather;","import './App.css';\nimport React from 'react';\nimport Weather from \"./components/weather\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}